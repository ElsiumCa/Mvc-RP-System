// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories;

#nullable disable

namespace Elsiumc.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Entities.RpItems.Constitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndsAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("NoVotes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("YesVotes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Constitutions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Bu, Anayasa 1'in içeriğidir.",
                            CreatedAt = new DateTime(2025, 4, 29, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(592),
                            CreatedByUserId = "user1",
                            EndsAt = new DateTime(2025, 5, 4, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(593),
                            NoVotes = 30,
                            Title = "Anayasa 1",
                            YesVotes = 50
                        },
                        new
                        {
                            Id = 2,
                            Content = "Bu, Anayasa 2'nin içeriğidir.",
                            CreatedAt = new DateTime(2025, 5, 1, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(596),
                            CreatedByUserId = "user2",
                            EndsAt = new DateTime(2025, 5, 6, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(597),
                            NoVotes = 60,
                            Title = "Anayasa 2",
                            YesVotes = 40
                        },
                        new
                        {
                            Id = 3,
                            Content = "Bu, Anayasa 3'ün içeriğidir.",
                            CreatedAt = new DateTime(2025, 4, 24, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(599),
                            CreatedByUserId = "user3",
                            EndsAt = new DateTime(2025, 4, 29, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(600),
                            NoVotes = 20,
                            Title = "Anayasa 3",
                            YesVotes = 70
                        },
                        new
                        {
                            Id = 4,
                            Content = "Bu, Anayasa 4'ün içeriğidir.",
                            CreatedAt = new DateTime(2025, 4, 27, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(602),
                            CreatedByUserId = "user4",
                            EndsAt = new DateTime(2025, 5, 2, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(603),
                            NoVotes = 40,
                            Title = "Anayasa 4",
                            YesVotes = 30
                        },
                        new
                        {
                            Id = 5,
                            Content = "Bu, Anayasa 5'in içeriğidir.",
                            CreatedAt = new DateTime(2025, 4, 19, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(604),
                            CreatedByUserId = "user5",
                            EndsAt = new DateTime(2025, 4, 24, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(605),
                            NoVotes = 10,
                            Title = "Anayasa 5",
                            YesVotes = 90
                        },
                        new
                        {
                            Id = 6,
                            Content = "Bu, Anayasa 6'nın içeriğidir.",
                            CreatedAt = new DateTime(2025, 4, 21, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(606),
                            CreatedByUserId = "user6",
                            EndsAt = new DateTime(2025, 4, 26, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(607),
                            NoVotes = 50,
                            Title = "Anayasa 6",
                            YesVotes = 60
                        },
                        new
                        {
                            Id = 7,
                            Content = "Bu, Anayasa 7'nin içeriğidir.",
                            CreatedAt = new DateTime(2025, 4, 14, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(608),
                            CreatedByUserId = "user7",
                            EndsAt = new DateTime(2025, 4, 19, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(609),
                            NoVotes = 40,
                            Title = "Anayasa 7",
                            YesVotes = 80
                        },
                        new
                        {
                            Id = 8,
                            Content = "Bu, Anayasa 8'in içeriğidir.",
                            CreatedAt = new DateTime(2025, 4, 17, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(610),
                            CreatedByUserId = "user8",
                            EndsAt = new DateTime(2025, 4, 22, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(611),
                            NoVotes = 70,
                            Title = "Anayasa 8",
                            YesVotes = 20
                        },
                        new
                        {
                            Id = 9,
                            Content = "Bu, Anayasa 9'un içeriğidir.",
                            CreatedAt = new DateTime(2025, 4, 9, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(613),
                            CreatedByUserId = "user9",
                            EndsAt = new DateTime(2025, 4, 14, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(613),
                            NoVotes = 5,
                            Title = "Anayasa 9",
                            YesVotes = 100
                        },
                        new
                        {
                            Id = 10,
                            Content = "Bu, Anayasa 10'un içeriğidir.",
                            CreatedAt = new DateTime(2025, 4, 11, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(615),
                            CreatedByUserId = "user10",
                            EndsAt = new DateTime(2025, 4, 16, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(615),
                            NoVotes = 50,
                            Title = "Anayasa 10",
                            YesVotes = 50
                        },
                        new
                        {
                            Id = 11,
                            Content = "Bu, Anayasa 11'in içeriğidir.",
                            CreatedAt = new DateTime(2025, 4, 4, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(617),
                            CreatedByUserId = "user11",
                            EndsAt = new DateTime(2025, 4, 9, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(617),
                            NoVotes = 30,
                            Title = "Anayasa 11",
                            YesVotes = 60
                        },
                        new
                        {
                            Id = 12,
                            Content = "Bu, Anayasa 12'nin içeriğidir.",
                            CreatedAt = new DateTime(2025, 3, 30, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(619),
                            CreatedByUserId = "user12",
                            EndsAt = new DateTime(2025, 4, 4, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(619),
                            NoVotes = 20,
                            Title = "Anayasa 12",
                            YesVotes = 70
                        },
                        new
                        {
                            Id = 13,
                            Content = "Bu, Anayasa 13'ün içeriğidir.",
                            CreatedAt = new DateTime(2025, 3, 25, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(621),
                            CreatedByUserId = "user13",
                            EndsAt = new DateTime(2025, 3, 30, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(621),
                            NoVotes = 60,
                            Title = "Anayasa 13",
                            YesVotes = 30
                        },
                        new
                        {
                            Id = 14,
                            Content = "Bu, Anayasa 14'ün içeriğidir.",
                            CreatedAt = new DateTime(2025, 3, 20, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(623),
                            CreatedByUserId = "user14",
                            EndsAt = new DateTime(2025, 3, 25, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(623),
                            NoVotes = 10,
                            Title = "Anayasa 14",
                            YesVotes = 90
                        },
                        new
                        {
                            Id = 15,
                            Content = "Bu, Anayasa 15'in içeriğidir.",
                            CreatedAt = new DateTime(2025, 3, 15, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(625),
                            CreatedByUserId = "user15",
                            EndsAt = new DateTime(2025, 3, 20, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(626),
                            NoVotes = 40,
                            Title = "Anayasa 15",
                            YesVotes = 40
                        },
                        new
                        {
                            Id = 16,
                            Content = "Bu, Anayasa 16'nın içeriğidir.",
                            CreatedAt = new DateTime(2025, 3, 10, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(627),
                            CreatedByUserId = "user16",
                            EndsAt = new DateTime(2025, 3, 15, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(628),
                            NoVotes = 20,
                            Title = "Anayasa 16",
                            YesVotes = 80
                        },
                        new
                        {
                            Id = 17,
                            Content = "Bu, Anayasa 17'nin içeriğidir.",
                            CreatedAt = new DateTime(2025, 3, 5, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(629),
                            CreatedByUserId = "user17",
                            EndsAt = new DateTime(2025, 3, 10, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(630),
                            NoVotes = 30,
                            Title = "Anayasa 17",
                            YesVotes = 70
                        },
                        new
                        {
                            Id = 18,
                            Content = "Bu, Anayasa 18'in içeriğidir.",
                            CreatedAt = new DateTime(2025, 2, 28, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(631),
                            CreatedByUserId = "user18",
                            EndsAt = new DateTime(2025, 3, 5, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(632),
                            NoVotes = 40,
                            Title = "Anayasa 18",
                            YesVotes = 60
                        },
                        new
                        {
                            Id = 19,
                            Content = "Bu, Anayasa 19'un içeriğidir.",
                            CreatedAt = new DateTime(2025, 2, 23, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(633),
                            CreatedByUserId = "user19",
                            EndsAt = new DateTime(2025, 2, 28, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(634),
                            NoVotes = 50,
                            Title = "Anayasa 19",
                            YesVotes = 50
                        },
                        new
                        {
                            Id = 20,
                            Content = "Bu, Anayasa 20'nin içeriğidir.",
                            CreatedAt = new DateTime(2025, 2, 18, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(635),
                            CreatedByUserId = "user20",
                            EndsAt = new DateTime(2025, 2, 23, 21, 16, 8, 276, DateTimeKind.Utc).AddTicks(636),
                            NoVotes = 0,
                            Title = "Anayasa 20",
                            YesVotes = 100
                        });
                });

            modelBuilder.Entity("IdentityCitizen", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("CriminalRecords")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("JoinDate")
                        .HasColumnType("longtext");

                    b.Property<string>("Lands")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MainRole")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Occupation")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<int?>("PenaltyPoints")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("SubRoles")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "50579300-40d5-4f00-81ad-5d0574d611f6",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2a973016-75a8-44b4-a61a-6337c1f70923",
                            Name = "Family",
                            NormalizedName = "FAMİLY"
                        },
                        new
                        {
                            Id = "e0694e87-5545-4bac-bb05-951c46557381",
                            Name = "School",
                            NormalizedName = "SCHOOL"
                        },
                        new
                        {
                            Id = "f276132b-6992-44f5-afe7-fcad1fca1e6d",
                            Name = "Friend",
                            NormalizedName = "Friend"
                        },
                        new
                        {
                            Id = "de860912-aad3-478d-a56d-39a47732da95",
                            Name = "Citizen",
                            NormalizedName = "CITIZEN"
                        },
                        new
                        {
                            Id = "46b547d4-5c4c-46b3-afad-ac8de12fd8d6",
                            Name = "President",
                            NormalizedName = "PRESİDENT"
                        },
                        new
                        {
                            Id = "062aa28a-2195-44c8-a7e6-a2a71e34c984",
                            Name = "Finance",
                            NormalizedName = "FİNANCE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IdentityCitizen", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IdentityCitizen", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IdentityCitizen", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IdentityCitizen", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
